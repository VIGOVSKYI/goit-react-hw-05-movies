{"version":3,"file":"static/js/89.293e937f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/movieDetails.module.css?c148","pages/MovieDetails/MovieDetails.jsx","pages/shared/Loading/Loading.js","pages/shared/servises/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"movieDetails_goBack__CI1KW\",\"MovieDetailsPage\":\"movieDetails_MovieDetailsPage__K7Raj\",\"detailsImage\":\"movieDetails_detailsImage__jAq3+\",\"detailsImageWrapper\":\"movieDetails_detailsImageWrapper__IiLBE\",\"detailsContentWrapper\":\"movieDetails_detailsContentWrapper__YBI9P\",\"title\":\"movieDetails_title__SN6Ns\",\"userScore\":\"movieDetails_userScore__2hSbU\",\"overViewTitle\":\"movieDetails_overViewTitle__50piD\",\"overView\":\"movieDetails_overView__QGwlt\",\"genresTitle\":\"movieDetails_genresTitle__VaJqi\",\"additionalInformationTitle\":\"movieDetails_additionalInformationTitle__lhuxQ\",\"additionalInformationLink\":\"movieDetails_additionalInformationLink__1CT5O\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Outlet,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport Loading from '../../pages/shared/Loading/Loading';\nimport { fetchMovieDetails } from '../../pages/shared/servises/movies-api.js';\nimport styles from './movieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const [items, setItems] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchMovieDetails(id);\n        setItems(data);\n      } catch ({ response }) {\n        setError(response.dada.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDetails();\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>error</p>}\n      {loading && (\n        <div>\n          <Loading />\n        </div>\n      )}\n      <button\n        type=\"button\"\n        onClick={() => {\n          navigate(from);\n        }}\n        className={styles.goBack}\n      >\n        Go back\n      </button>\n      <div className={styles.MovieDetailsPage}>\n        <div className={styles.detailsImageWrapper}>\n          {items?.poster_path && (\n            <img\n              className={styles.detailsImage}\n              src={\n                items?.poster_path\n                  ? `https://image.tmdb.org/t/p/w400${items?.poster_path}`\n                  : `https://placehold.it/300`\n              }\n              alt={items?.title}\n              width=\"300\"\n            />\n          )}\n        </div>\n        <div className={styles.detailsContentWrapper}>\n          <h2 className={styles.title}>{items?.title}</h2>\n          <span className={styles.cardYear}>\n            {items?.release_date.slice(0, 4)}\n          </span>\n          <span className={styles.userScore}>\n            User score: {items?.vote_average * 10}%\n          </span>\n          <h3 className={styles.overViewTitle}>Overview</h3>\n          <p className={styles.overView}>{items?.overview}</p>\n          <h4 className={styles.genresTitle}>Genres:</h4>\n\n          <ul>\n            {items?.genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <span className={styles.additionalInformationTitle}>\n        Additional information\n      </span>\n\n      <Link\n        to=\"cast\"\n        state={{ from }}\n        className={styles.additionalInformationLink}\n      >\n        Cast\n      </Link>\n      <Link\n        to=\"reviews\"\n        state={{ from }}\n        className={styles.additionalInformationLink}\n      >\n        Reviews\n      </Link>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { React } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Loading = () => {\n  return <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />;\n};\n\nexport default Loading;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '36c444871f3c4ccb3f8770d789f46dd7';\n\nexport const fetchMovieTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchMovieBySearchQuery = searchQuery => {\n  return axios\n    .get(\n      `${baseURL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => response.data.results);\n};\n\nexport const fetchMovieDetails = id => {\n  return axios\n    .get(`${baseURL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchCast = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => response.data.cast);\n};\n\nexport const fetchReview = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => response.data.results);\n};"],"names":["id","useParams","useState","items","setItems","error","setError","loading","setLoading","from","useLocation","state","navigate","useNavigate","useEffect","fetchDetails","fetchMovieDetails","data","response","dada","message","Loading","type","onClick","className","styles","poster_path","src","alt","title","width","release_date","slice","vote_average","overview","genres","map","name","to","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","baseURL","API_KEY","fetchMovieTrending","axios","results","fetchMovieBySearchQuery","searchQuery","then","fetchCast","movieId","cast","fetchReview"],"sourceRoot":""}