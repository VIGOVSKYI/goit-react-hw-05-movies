{"version":3,"file":"static/js/115.79c34c12.chunk.js","mappings":"yOAyDA,UApDa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAW,GAFS,UAGDG,EAAAA,EAAAA,GAAUX,GAHT,OAGdY,EAHc,OAIpBR,EAASQ,GAJW,gDAMpBN,EAAS,EAAD,IANY,yBAQpBE,GAAW,GARS,4EAAH,qDAYrBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAS,iCACTE,IACC,0BACE,SAAC,IAAD,OAGJ,+BACGJ,QADH,IACGA,OADH,EACGA,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACV,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GAD3B,8BAIdI,IAAKH,EACLI,MAAM,SAER,eAAIC,UAAU,YAAd,SAA2BL,KAC3B,kBAAMK,UAAU,iBAAhB,wBAA6CJ,OAXtCH,EADC,QAkBnB,C,sDCxCD,IAZgB,WACd,OAAO,SAAC,KAAD,CACGQ,SAAS,EACTC,OAAO,KACPH,MAAM,KACNI,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAEhE,C,iMCXKC,EAAU,+BAEVC,EAAU,mCAEHC,EAAkB,mCAAG,sGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACkBC,EADlB,2BADS,uBACxBjB,EADwB,EACxBA,KADwB,kBAIzBA,EAAKoB,SAJoB,2CAAH,qDAOlBC,EAA0B,SAAAC,GACrC,OAAOH,EAAAA,EAAAA,IAAA,UAEAH,EAFA,+BAE8BM,EAF9B,oBAEqDL,EAFrD,+CAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,KAAKoB,OAAlB,GACjB,EAEYK,EAAoB,SAAArC,GAC/B,OAAO+B,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACoB5B,EADpB,oBACkC6B,EADlC,oBAEJM,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,IAAb,GACjB,EAEYD,EAAY,SAAA2B,GACvB,OAAOP,EAAAA,EAAAA,IAAA,UAEAH,EAFA,kBAEiBU,EAFjB,4BAE4CT,EAF5C,oBAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,KAAK2B,IAAlB,GACjB,EAEYC,EAAc,SAAAF,GACzB,OAAOP,EAAAA,EAAAA,IAAA,UAEAH,EAFA,kBAEiBU,EAFjB,4BAE4CT,EAF5C,2BAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,KAAKoB,OAAlB,GACjB,C","sources":["pages/Cast/Cast.jsx","pages/shared/Loading/Loading.js","pages/shared/servises/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../pages/shared/servises/movies-api.js';\nimport Loading from '../../pages/shared/Loading/Loading';\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [items, setItems] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMoviesCast = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchCast(id);\n        setItems(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesCast();\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>error</p>}\n      {loading && (\n        <div>\n          <Loading />\n        </div>\n      )}\n      <ul>\n        {items?.map(({ cast_id, profile_path, name, character }) => (\n          <li key={cast_id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : `https://placehold.it/50x75/`\n              }\n              alt={name}\n              width=\"100\"\n            />\n            <h4 className=\"cast-name\">{name}</h4>\n            <span className=\"cast-character\">Character: {character}</span>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import { React } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Loading = () => {\n  return <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />;\n};\n\nexport default Loading;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '36c444871f3c4ccb3f8770d789f46dd7';\n\nexport const fetchMovieTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchMovieBySearchQuery = searchQuery => {\n  return axios\n    .get(\n      `${baseURL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => response.data.results);\n};\n\nexport const fetchMovieDetails = id => {\n  return axios\n    .get(`${baseURL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchCast = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => response.data.cast);\n};\n\nexport const fetchReview = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => response.data.results);\n};"],"names":["id","useParams","useState","items","setItems","error","setError","loading","setLoading","useEffect","fetchMoviesCast","fetchCast","data","map","cast_id","profile_path","name","character","src","alt","width","className","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","baseURL","API_KEY","fetchMovieTrending","axios","results","fetchMovieBySearchQuery","searchQuery","then","response","fetchMovieDetails","movieId","cast","fetchReview"],"sourceRoot":""}