{"version":3,"file":"static/js/871.27610a33.chunk.js","mappings":"yOA4DA,UAvDgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,oGAErBF,GAAW,GAFU,UAGFG,EAAAA,EAAAA,IAAYX,GAHV,OAGfY,EAHe,OAIrBR,EAASQ,GAJY,gDAMrBN,EAAS,EAAD,IANa,yBAQrBE,GAAW,GARU,4EAAH,qDAYtBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAS,iCACTE,IACC,0BACE,SAAC,KAAD,CACEM,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAIzC,IAAjBhB,EAAMiB,QACL,yEAEA,wBACGjB,EAAMkB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASvB,EAApB,EAAoBA,GAApB,OACT,2BACE,oCAAYsB,MACZ,uBAAIC,MAFGvB,EADA,QAUpB,C,iMCxDKwB,EAAU,+BAEVC,EAAU,mCAEHC,EAAkB,mCAAG,sGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACkBC,EADlB,2BADS,uBACxBb,EADwB,EACxBA,KADwB,kBAIzBA,EAAKgB,SAJoB,2CAAH,qDAOlBC,EAA0B,SAAAC,GACrC,OAAOH,EAAAA,EAAAA,IAAA,UAEAH,EAFA,+BAE8BM,EAF9B,oBAEqDL,EAFrD,+CAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASpB,KAAKgB,OAAlB,GACjB,EAEYK,EAAoB,SAAAjC,GAC/B,OAAO2B,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACoBxB,EADpB,oBACkCyB,EADlC,oBAEJM,MAAK,SAAAC,GAAQ,OAAIA,EAASpB,IAAb,GACjB,EAEYsB,EAAY,SAAAC,GACvB,OAAOR,EAAAA,EAAAA,IAAA,UAEAH,EAFA,kBAEiBW,EAFjB,4BAE4CV,EAF5C,oBAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASpB,KAAKwB,IAAlB,GACjB,EAEYzB,EAAc,SAAAwB,GACzB,OAAOR,EAAAA,EAAAA,IAAA,UAEAH,EAFA,kBAEiBW,EAFjB,4BAE4CV,EAF5C,2BAIJM,MAAK,SAAAC,GAAQ,OAAIA,EAASpB,KAAKgB,OAAlB,GACjB,C","sources":["pages/Reviews/Reviews.jsx","pages/shared/servises/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { fetchReview } from '../../pages/shared/servises/movies-api.js';\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieReview = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchReview(id);\n        setItems(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieReview();\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>error</p>}\n      {loading && (\n        <div>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )}\n      {items.length === 0 ? (\n        <span>We don't have any reviews for this movie.</span>\n      ) : (\n        <ul>\n          {items.map(({ author, content, id }) => (\n            <li key={id}>\n              <h4>Autor: {author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '36c444871f3c4ccb3f8770d789f46dd7';\n\nexport const fetchMovieTrending = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchMovieBySearchQuery = searchQuery => {\n  return axios\n    .get(\n      `${baseURL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    )\n    .then(response => response.data.results);\n};\n\nexport const fetchMovieDetails = id => {\n  return axios\n    .get(`${baseURL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchCast = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => response.data.cast);\n};\n\nexport const fetchReview = movieId => {\n  return axios\n    .get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(response => response.data.results);\n};"],"names":["id","useParams","useState","items","setItems","error","setError","loading","setLoading","useEffect","fetchMovieReview","fetchReview","data","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","map","author","content","baseURL","API_KEY","fetchMovieTrending","axios","results","fetchMovieBySearchQuery","searchQuery","then","response","fetchMovieDetails","fetchCast","movieId","cast"],"sourceRoot":""}